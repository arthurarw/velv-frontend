import Head from 'next/head'
import {
    AppBar, Box, Button, Checkbox, CircularProgress,
    Container, Divider, FormControl, FormControlLabel, FormGroup,
    FormLabel,
    Grid, InputLabel, MenuItem, Paper, Select,
    Slider, Toolbar,
    Typography
} from "@mui/material";
import ExpandMoreIcon from '@mui/icons-material/ExpandMore';
import {useEffect, useState} from "react";
import {main} from "@popperjs/core";
import useIndexPage from "@/data/hooks/pages/useIndex.page";

function valueText(value: number) {
    console.log(value);
    return `${value} GB`;
}

export default function Home() {
    const {
        isLoadingLocations,
        isLoadingServers,
        servers,
        locations,
        getLocations,
        onSubmit
    } = useIndexPage();

    const [ram, setRam] = useState({
        two: false,
        four: false,
        eight: false,
        twelve: false,
        sixteen: false,
        twentyFour: false,
        thirtyTwo: false,
        fortyEight: false,
        sixtyFour: false,
        ninetySix: false
    });

    const [loadingLocations, setLoadingLocations] = useState<boolean>(false);

    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
        setRam({
            ...ram,
            [event.target.name]: event.target.checked,
        });
    };

    useEffect(() => {
        getLocations();
    }, []);

    console.log(locations);
    return (
        <>
            <Head>
                <title>Velv Frontend</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <AppBar
                position="absolute"
                color="default"
                elevation={0}
                sx={{
                    position: 'relative',
                }}
            >
                <Toolbar>
                    <Typography variant="h6" color="inherit" noWrap>
                        Lease Servers Search
                    </Typography>
                </Toolbar>
            </AppBar>
            <Container component="main" sx={{mb: 4}}>
                <Paper variant="outlined" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>
                    {isLoadingLocations && (
                        <Box textAlign="center">
                            <CircularProgress/>
                        </Box>
                    )}
                    {!isLoadingLocations && (
                        <div>
                            <Typography>Search Form</Typography>
                            <Divider sx={{mt: 2, mb: 2}}/>
                            <Grid container spacing={2}>
                                <Grid item xs={6}>
                                    <FormGroup>
                                        <FormLabel component="legend">
                                            Select disk space size (GB):
                                        </FormLabel>
                                        <Slider
                                            getAriaValueText={valueText}
                                            defaultValue={0}
                                            aria-label="Default"
                                            valueLabelDisplay="auto"
                                            min={0}
                                            name={'storage'}
                                            max={72000}
                                        />
                                    </FormGroup>
                                </Grid>
                                <Grid item xs={6}>
                                    <Box sx={{display: 'flex'}}>
                                        <FormControl sx={{ml: 3}} component="fieldset" variant="standard" fullWidth>
                                            <FormLabel component="legend">RAM Memory:</FormLabel>
                                            <FormGroup>
                                                <FormControlLabel
                                                    control={
                                                        <Checkbox checked={ram.two} onChange={handleChange} name="two"/>
                                                    }
                                                    label="2GB"
                                                />
                                                <FormControlLabel
                                                    control={
                                                        <Checkbox checked={ram.four} onChange={handleChange}
                                                                  name="four"/>
                                                    }
                                                    label="4GB"
                                                />
                                                <FormControlLabel
                                                    control={
                                                        <Checkbox checked={ram.eight} onChange={handleChange}
                                                                  name="eight"/>
                                                    }
                                                    label="8GB"
                                                />
                                                <FormControlLabel
                                                    control={
                                                        <Checkbox checked={ram.twelve} onChange={handleChange}
                                                                  name="twelve"/>
                                                    }
                                                    label="12GB"
                                                />
                                                <FormControlLabel
                                                    control={
                                                        <Checkbox checked={ram.sixteen} onChange={handleChange}
                                                                  name="sixteen"/>
                                                    }
                                                    label="16GB"
                                                />
                                            </FormGroup>
                                        </FormControl>
                                        <FormControl component="fieldset" variant="standard" fullWidth>
                                            <FormGroup>
                                                <FormControlLabel
                                                    control={
                                                        <Checkbox checked={ram.twentyFour} onChange={handleChange}
                                                                  name="twentyFour"/>
                                                    }
                                                    label="24GB"
                                                />
                                                <FormControlLabel
                                                    control={
                                                        <Checkbox checked={ram.thirtyTwo} onChange={handleChange}
                                                                  name="thirtyTwo"/>
                                                    }
                                                    label="32GB"
                                                />
                                                <FormControlLabel
                                                    control={
                                                        <Checkbox checked={ram.fortyEight} onChange={handleChange}
                                                                  name="fortyEight"/>
                                                    }
                                                    label="48GB"
                                                />
                                                <FormControlLabel
                                                    control={
                                                        <Checkbox checked={ram.sixtyFour} onChange={handleChange}
                                                                  name="sixtyFour"/>
                                                    }
                                                    label="64GB"
                                                />
                                                <FormControlLabel
                                                    control={
                                                        <Checkbox checked={ram.ninetySix} onChange={handleChange}
                                                                  name="ninetySix"/>
                                                    }
                                                    label="96GB"
                                                />
                                            </FormGroup>
                                        </FormControl>
                                    </Box>
                                </Grid>
                                <Grid item xs={6}>
                                    <FormControl fullWidth>
                                        <InputLabel id="demo-simple-select-label">HardDisk Type</InputLabel>
                                        <Select
                                            labelId="demo-simple-select-label"
                                            id="demo-simple-select"
                                            value={'SAS'}
                                            label="HardDisk Type"
                                            name={'hard_disk_type'}
                                            // onChange={handleChange}
                                        >
                                            <MenuItem value={'SAS'}>SAS</MenuItem>
                                            <MenuItem value={'SATA'}>SATA</MenuItem>
                                            <MenuItem value={'SSD'}>SSD</MenuItem>
                                        </Select>
                                    </FormControl>
                                </Grid>
                                <Grid item xs={6}>
                                    <FormControl fullWidth>
                                        <InputLabel id="demo-simple-select-label">Server Location</InputLabel>
                                        <Select
                                            labelId="demo-simple-select-label"
                                            id="demo-simple-select"
                                            label="Server Location"
                                            name={'location'}
                                            // onChange={handleChange}
                                        >
                                            {locations?.map((value, key) => {
                                                return (
                                                    <MenuItem key={key} value={value}>{value}</MenuItem>
                                                );
                                            })}
                                        </Select>
                                    </FormControl>
                                </Grid>
                                <Grid item alignItems={'end'}>
                                    <Button type="submit" variant="contained" onSubmit={onSubmit}>Search</Button>
                                </Grid>
                            </Grid>
                        </div>
                    )}
                    <Divider sx={{mt: 3, mb: 3}}/>
                    <Box>
                        Use the form above to start your search...
                    </Box>
                </Paper>
            </Container>

        </>
    )
}
